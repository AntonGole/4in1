using System.Collections.Generic;
using System.Net;
using System.Net.Sockets;

public class CITEDiscovery
{
    private int BROADCAST_PORT = 4260;

    private UdpClient udpClient;

    public delegate void PeerListUpdatedHandler(List<CITEDiscoveryPeer> peers);
    public event PeerListUpdatedHandler onPeerListUpdated;

    private CITEDiscoveryPeer localPeer;

    public CITEDiscovery()
    {
        udpClient = new UdpClient();
        udpClient.Client.Bind(new IPEndPoint(IPAddress.Any, BROADCAST_PORT));
        localPeer = new CITEDiscoveryPeer();
    }

    public CITEDiscoveryPeer getLocalPeer()
    {
        return localPeer;
    }

    public class CITEDiscoveryPeer {
        private string uuid;
        private string deviceName;
        private bool isServer;
        private string networkAddress;
        private string roomId;

        public CITEDiscoveryPeer()
        {
            Uuid = null;
            DeviceName = null;
            IsServer = false;
            NetworkAddress = null;
            RoomId = null;
        }

        public string RoomId { get => roomId; set => roomId = value; }
        public string NetworkAddress { get => networkAddress; set => networkAddress = value; }
        public bool IsServer { get => isServer; set => isServer = value; }
        public string DeviceName { get => deviceName; set => deviceName = value; }
        public string Uuid { get => uuid; set => uuid = value; }
    }
}
